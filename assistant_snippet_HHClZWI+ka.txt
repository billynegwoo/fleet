1|import { createContext, useContext, ReactNode } from "react";
2|import { type Device } from "~/types";
3|
4|interface DeviceContextType {
5|  createDevice: (data: Omit<Device, "id">) => void;
6|}
7|
8|const DeviceContext = createContext<DeviceContextType | null>(null);
9|
10|export function DeviceProvider({ children }: { children: ReactNode }) {
11|  const createDevice = (data: Omit<Device, "id">) => {
12|    // Implementation here
13|  };
14|
15|  return (
16|    <DeviceContext.Provider value={{ createDevice }}>
17|      {children}
18|    </DeviceContext.Provider>
19|  );
20|}
21|
22|export function useDevices() {
23|  const context = useContext(DeviceContext);
24|  if (!context) throw new Error("useDevices must be used within DeviceProvider");
25|  return context;
26|} 